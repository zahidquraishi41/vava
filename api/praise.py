from core.base_api import BaseAPI
from core.command import Command
from random import choice
import re


class Praise(BaseAPI):
    """9 out of 10 experts say you have truly graceful knees

    praise: Tosses out a delightful, unexpected compliment.
    praise [name]: Sends some personalized verbal sunshine to [name].
    """

    def __init__(self):
        super().__init__()
        self.templates_arr = (
            "I can tell ",
            "I must say ",
            "9 out of 10 experts say ",
            "I reckon ",
            "I've heard ",
            "It's true ",
            "Honestly, ",
            "You know, ",
            "I'm convinced ",
            "Without a doubt, ",
            "Believe me, ",
            "It's obvious that ",
            "Let's be real, ",
            "Not gonna lie, ",
            "Guess what? ",
            "Seriously, ",
            "No doubt ",
        )

        self.tangible_singular_props = (
            "chin",
            "demeanour",
            "face",
            "fashion sense",
            "forehead",
            "heart",
            "index finger",
            "laugh",
            "mind",
            "mouth",
            "neck",
            "outlook on life",
            "radiance",
            "right foot",
            "right hand",
            "smile",
            "soul",
            "thumb",
            "vibe",
            "voice",
            "way of thinking",
            "work ethic",
            "nape",
            "presence",
            "aura",
            "wit",
            "grin",
            "intuition",
            "poise",
            "glow",
            "tone of voice",
            "attitude",
            "gesture",
            "stance",
            "humor",
            "temperament",
            "gait",
            "charm",
            "style",
            "confidence",
            "energy",
            "spirit",
            "vision",
            "perspective",
            "spark",
            "expression",
            "personality",
            "imagination",
            "passion",
        )

        self.tangible_multiple_props = (
            "ankles",
            "calves",
            "clothes",
            "ears",
            "elbows",
            "eyebrows",
            "eyelashes",
            "eyes",
            "feet",
            "fingernails",
            "fingers",
            "forearms",
            "hair",
            "hands",
            "ideas",
            "knees",
            "legs",
            "muscles",
            "skills",
            "skin",
            "strengths",
            "teeth",
            "thoughts",
            "toes",
            "wrists",
            "cheeks",
            "shoulders",
            "expressions",
            "features",
            "manners",
            "reflexes",
            "decisions",
            "reactions",
            "habits",
            "talents",
            "qualities",
            "opinions",
            "responses",
            "manners of speaking",
            "ways of thinking",
            "instincts",
            "principles",
            "traits",
            "habits of mind",
            "insights",
            "visions",
            "values",
        )

        self.adjectives = (
            "adorable",
            "alluring",
            "amazing",
            "angelic",
            "astonishing",
            "astounding",
            "attractive",
            "awe-inspiring",
            "awesome",
            "beautiful",
            "beguiling",
            "bewildering",
            "bewitching",
            "breathtaking",
            "charming",
            "comely",
            "cute",
            "dazzling",
            "delightful",
            "divine",
            "dreamy",
            "exquisite",
            "extraordinary",
            "fantastic",
            "glamorous",
            "gorgeous",
            "great",
            "handsome",
            "heavenly",
            "impressive",
            "incredible",
            "insane",
            "irresistible",
            "lovely",
            "magnificent",
            "majestic",
            "marvellous",
            "marvelous",
            "mind-blowing",
            "mind-boggling",
            "perfect",
            "phenomenal",
            "pleasing",
            "preposterous",
            "pretty",
            "radiant",
            "ravishing",
            "remarkable",
            "sensational",
            "smashing",
            "spectacular",
            "splendid",
            "stunning",
            "stupefying",
            "stupendous",
            "sublime",
            "superb",
            "sweet",
            "terrific",
            "tremendous",
            "unbelievable",
            "wonderful",
            "wowzers",
            "resplendent",
            "effervescent",
            "ethereal",
            "divinesque",
            "numinous",
            "winsome",
            "bedazzling",
            "entrancing",
            "glorious",
            "gilded",
            "vivid",
            "radiating",
            "hallowed",
            "celestial",
            "opulent",
            "beauteous",
            "statuesque",
            "enchanting",
            "sophisticated",
            "mesmeric",
            "wondrous",
            "vivacious",
            "luminous",
            "refined",
            "graceful",
            "impeccable",
            "sumptuous",
            "aesthetic",
            "fascinating",
            "glimmering",
            "charismatic",
            "stellar",
            "enrapturing",
            "tasteful",
            "dashing",
        )

        self.adverbs = (
            "absolutely",
            "awfully",
            "completely",
            "decidedly",
            "deeply",
            "devilishly",
            "distinctly",
            "entirely",
            "especially",
            "ever so",
            "exceedingly",
            "exceptionally",
            "extraordinarily",
            "extremely",
            "frightfully",
            "highly",
            "incredibly",
            "inordinately",
            "insanely",
            "intensely",
            "mightily",
            "oh-so",
            "outstandingly",
            "particularly",
            "perfectly",
            "positively",
            "practically",
            "pretty",
            "purely",
            "radiantly",
            "rather",
            "really",
            "remarkably",
            "seriously",
            "so",
            "supremely",
            "terribly",
            "thoroughly",
            "totally",
            "tremendously",
            "truly",
            "unusually",
            "utterly",
            "virtually",
            "astoundingly",
            "unquestionably",
            "profoundly",
            "formidably",
            "resplendently",
            "infinitely",
            "boundlessly",
            "indisputably",
            "magnificently",
            "marvellously",
            "opulently",
            "regally",
            "splendiferously",
            "seraphically",
            "sublimely",
            "effortlessly",
            "luminously",
            "mesmerizingly",
            "bewitchingly",
            "staggeringly",
            "eminently",
            "divinely",
            "resoundingly",
            "phenomenally",
            "celestially",
            "enchantingly",
            "gloriously",
            "majestically",
            "blissfully",
            "aesthetically",
            "transcendently",
            "wondrously",
            "fabulously",
        )

    def get_descriptor(self):
        return f"{choice(self.adverbs)} {choice(self.adjectives)}"

    def make_compliment(self):
        text = self.get_descriptor()
        singular_form = "an " + text if re.match(r"^[aeiou]", text) else "a " + text
        abstract_props = [
            f"{singular_form} {choice(self.tangible_singular_props)}",
            f"{self.get_descriptor()} {choice(self.tangible_multiple_props)}",
        ]
        final_templates = [
            f"you are {self.get_descriptor()}",
            f"you have {choice(abstract_props)}",
        ]
        full_templates = [
            prefix + choice(final_templates) for prefix in self.templates_arr
        ]
        return choice(full_templates)

    def validate(self, cmd: Command) -> bool:
        return cmd.command == "praise"

    def run(self, cmd: Command) -> str:
        name = cmd.param
        if name:
            name = cmd.author if cmd.param == "me" else cmd.param
            name += "\n"
        return name + self.make_compliment()

    def ping(self) -> bool:
        return True
